name: flutter_charts_sample_app
description: A sample application that uses Flutter Charts from pub -  https://pub.dartlang.org/packages/flutter_charts.

# version: The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html

#######################
# MZ Versioning summary
# ---------------------
# A. In pubspec.yaml (this file), version: is required on packages copied to pub.
#         For such packages, this must use semantic versioning format - e.g.: 1.2.3+build-3
#
#         BUT BECAUSE version: is reused for Flutter:
#              - 2. Flutter Android builds (build.gradle)
#              - 3. Flutter iOS builds
#              - 4. Deployments to Google Play
#         MESS ENSUES
#
#  More details on how different tiers use version:
#    1. pubspec.yaml terminology (which is semantic versioning format)
#           version: versionNumber+build
#         Format restrictions:
#           "versionNumber" is like 1.2.3                               - "versionNumber" IF USED HERE (pubspec.yaml), must be like 1.2.3
#            "build"        is like alpha-1  (build is optional)        - "build" almost any string (no spaces) .
#    2. Flutter Android builds: build.gradle uses "versionNumber" and "build" to set the following properties
#           "versionName" <- versionNumber                              - versionName format: any string. Only to show to users. Can be overridden by --build-name
#                                                                         BUT versionNumber restriction from pubspec.yaml forces it to 1.2.3
#           "versionCode" <- build                                      - versionCode format: integer (1, 2, 3, etc).  Can be overridden by --build-number
#    3. Flutter iOS builds Todo
#    4. Google Play deploy:
#           releaseName <- Set from UI                                    - releaseName format: any string
#           versionCode <- "flutter.versionCode" (=="build" from pubspec) - versionCode format: integer (1, 2, 3, etc) - inherited from Android. MUST change on new release.
# Resolution:
#   TO RESOLVE THE CONFLICTING REQUIREMENTS, IN HERE (pubspec.yaml)
#   use the following format for "version:" in pubspec.yaml
#        1.2.3+integer  e.g. 0.0.4+4
#
#   Resolution with reasoning
#   "versionNumber" - semantic versioning must be used unless empty.
#   +
#   "build"        - integer - to satisfy Google Play Store "versionCode" requirement. Must keep increasing
#######################

version: 0.0.4+4

dependencies:
  flutter_charts: ^0.1.5
  flutter:
    sdk: flutter

dev_dependencies:
  test:
  flutter_test:
    sdk:  flutter

  # If your app is using the CupertinoIcons class for iOS style icons,
  #   enable (uncomment) the line below.
  # cupertino_icons: ^0.1.0

# Keep disabled for a shipping app - there are no dev dependencies for a shipping app
# dev_dependencies:
#   flutter_test:
#     sdk: flutter


# For information on the generic Dart part of this file, see the
# following page: https://www.dartlang.org/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #  - images/a_dot_burr.jpeg
  #  - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.io/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.io/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies, 
  # see https://flutter.io/custom-fonts/#from-packages
